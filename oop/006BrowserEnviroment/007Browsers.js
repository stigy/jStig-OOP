console.log(' ');
console.log('Browsers');
console.log(navigator);
console.dir(navigator);
console.log(window.location);
console.log('location functions -- reload(), assing(), replace()');
console.log(window.history);
console.log('window.history.back()');
console.log('window.history.forward()');
console.log('window.history(-1)');
console.log(window.frames);
console.log(window.frames.length);
console.log('window.frames[0]');
console.log('window.frames[0].window');
console.log('window.frames[0].parent === window');
console.log('window.frames[0].window.top === window');
console.log('window.frames[0].window.top === top');
console.log('self === window');
console.log('window.frames[0].self === frames[0].window');
console.log('If a frame has a name');
console.log('window.frames[\'name\'] === window.frames[0]');
console.log(window.screen);
console.log(window.screen.colorDepth);
console.log('window.open');
console.log('\t URL to load in the new window.');
console.log('\t Name of the new window.');
console.log('\t Comma-separated list of featrures such as.');
console.log('\t\t resizable.');
console.log('\t\t with height.');
console.log('\t\t status.');
console.log('\t\t and so on.');
console.log('window.close()');
console.log('window.moveTo(x,y).');
console.log('window.resizeTo(x,y).');
console.log('window.moveBy(x,y). take the actual position of the window can retrieve negative values');
console.log('window.resizeBy(x,y). take the actual size of the window can retrieve negative values');
console.log('window.alert()');
console.log('window.prompt()');
console.log('window.confirm()');
console.log('var answer = confirm(Question?)');
console.log('var answer = prompt(Question?)');
console.log('setTimeout setInverval');
function boo(){console.log('boo');}
var idTimeout = setTimeout(boo,2000);
clearTimeout(idTimeout);
var idInterval = setInterval(boo,500);
setTimeout('clearInterval(idInterval)',5000);
console.log('window.document');
console.log(window.document);
console.log('properties of a node, nodeType(1-12) nodeName nodeValue');
console.log(document.documentElement);
console.log(document.documentElement.nodeType);
console.log(document.documentElement.nodeName);
console.log(document.documentElement.tagName);
console.log(document.documentElement.hasChildNodes());
console.log(document.documentElement.childNodes.length);
console.log(document.documentElement.childNodes[0]);
console.log(document.documentElement.childNodes[1]);
console.log(document.documentElement.childNodes[2]);
console.log(document.documentElement.childNodes[2].parentNode);
var bd = document.documentElement.childNodes[2];
console.log(bd.childNodes.length);
console.log(bd.childNodes);
console.log(bd.childNodes[1].hasAttributes());
console.log(bd.childNodes[1].attributes.length);
console.log(bd.childNodes[1].attributes[0].nodeName);
console.log(bd.childNodes[1].attributes[0].nodeValue);
console.log(bd.childNodes[1].attributes['class'].nodeValue);
console.log(bd.childNodes[1].getAttribute('class'));
console.log(' ');
console.log('Accesing the content inside a tag');
console.log(bd.childNodes[1].nodeName);
console.log(bd.childNodes[1].textContent);
console.log(bd.childNodes[1].innerHTML);
console.log(bd.childNodes[3].textContent);
console.log(bd.childNodes[3].innerHTML);
console.log(bd.childNodes[1].childNodes.length);
console.log(bd.childNodes[1].childNodes[0].nodeName);
console.log(bd.childNodes[1].childNodes[0].nodeValue);
console.log(' ');
console.log('DOM ACCES SHORTCUTS');
console.log(document.getElementsByTagName('p').length);
console.log(document.getElementsByTagName('p')[0]);
console.log(document.getElementsByTagName('p')[2]);
console.log(document.getElementsByTagName('p')[2].id);
console.log(document.getElementsByTagName('p')[0].className);
console.log(document.getElementsByTagName('*').length);
console.log(' ');
console.log('SIBLINGS BODY FIRST AND LAST CHILDE');
var para = document.getElementById('closer');
console.log(para.nextSibling);
console.log(para.previousSibling);
console.log(para.previousSibling.previousSibling.previousSibling);
console.log(para.previousSibling.previousSibling.nextSibling.nextSibling);
console.log(document.body);
console.log(document.body.nextSibling);
console.log(document.body.previousSibling);
console.log(document.body.firstChild);
console.log(document.body.lastChild);

function walkDOM(n){
	do{
		if(n.hasChildNodes()){
			console.log(n.firstChild);
			walkDOM(n.firstChild);
		}
	}while(n = n.nextSibling)
}

walkDOM(document.documentElement);
walkDOM(document.body);
console.log('modifying dom nodes');
var my = document.getElementById('closer');
my.innerHTML = 'final!!!!';
my.innerHTML = '<em>my</em> final';
console.log(my.firstChild);
console.log(my.firstChild.firstChild);
my.firstChild.firstChild.nodeValue = 'your';
console.log(' ');
console.log('changing the style');
my.style.border = "1px solid red";
